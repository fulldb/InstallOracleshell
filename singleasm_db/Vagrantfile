# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

puts ""
puts "│▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒│"
puts " Oracle Database 11G/12C/18C/19C/21C && Linux 6/7/8 Vagrant box for VirtualBox"
puts "                                                                                  "
puts "----------------------------------------------------------------------------------"
puts " Author: luciferliu <https://github.com/pc-study/InstallOracleshell>              "
puts "                                                                                  "
puts "│▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒│"
puts ""
puts ""

# Variables
params = YAML.load_file 'config/vagrant.yml'
var_box                     = params['box']
var_vm_name                 = params['vm_name']
var_hostname                = params['hostname']
var_mem_size                = params['mem_size']
var_cpus                    = params['cpus']
var_public_ip               = params['public_ip']
var_non_rotational          = params['non_rotational']
var_asmdisk_data_name       = params['asmdisk_data_name']
var_asmdisk_data_size       = params['asmdisk_data_size']
var_db_version              = params['db_version']
var_gi_patch                = params['gi_patch']
var_grid_password           = params['grid_password']
var_oracle_password         = params['oracle_password']
var_oracle_sid              = params['oracle_sid']
var_install_base            = params['install_base']
var_characterset            = params['characterset']
var_cdb                     = params['cdb']
var_pdb                     = params['pdb']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = var_box
  config.vm.network "forwarded_port", guest: 1521, host: 1521
  config.vm.network "private_network", ip: var_public_ip
  config.vm.synced_folder "./software", "/vagrant"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = var_mem_size
    vb.cpus   = var_cpus
    vb.name   = var_vm_name

    vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', '0', '--nonrotational', var_non_rotational]

    unless File.exist?(var_asmdisk_data_name)
      vb.customize ['createhd', '--filename', var_asmdisk_data_name, '--size', var_asmdisk_data_size * 1024, '--format', 'VDI', '--variant', 'Fixed']
    end
    vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--nonrotational', var_non_rotational, '--mtype', 'shareable', '--medium', var_asmdisk_data_name]
    vb.customize ['modifymedium', 'disk', var_asmdisk_data_name, '--type', 'shareable']
  end

  config.vm.provision "shell", inline: <<-SHELL
    echo oracle | passwd --stdin root
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
  SHELL

  config.vm.provision "shell", path: "scripts/setup.sh", env: {
          "DB_VERSION"         => var_db_version,
          "GI_PATCH"           => var_gi_patch,
          "PUBLIC_IP"          => var_public_ip,
          "HOSTNAME"           => var_hostname,
          "ORACLE_SID"         => var_oracle_sid,
          "GRID_PASSWORD"      => var_grid_password,
          "ORACLE_PASSWORD"    => var_oracle_password,
          "INSTALL_BASE"       => var_install_base,
          "CHARACTERSET"       => var_characterset,
          "CDB"                => var_cdb,
          "PDB"                => var_pdb
      }
end

